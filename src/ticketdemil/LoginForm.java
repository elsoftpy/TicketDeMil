/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ticketdemil;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import jakarta.xml.bind.DatatypeConverter;
import java.awt.event.KeyEvent;
import java.nio.charset.StandardCharsets;
import java.sql.*;

/**
 *
 * @author antit
 */
public class LoginForm extends javax.swing.JFrame {
    
    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        labelLogo = new javax.swing.JLabel();
        formsPanel = new javax.swing.JPanel();
        labelLogin = new javax.swing.JLabel();
        labelUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        labelPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setBackground(new java.awt.Color(255, 255, 255));

        panelPrincipal.setBackground(new java.awt.Color(247, 194, 137));
        panelPrincipal.setPreferredSize(new java.awt.Dimension(800, 500));
        panelPrincipal.setLayout(null);

        sidePanel.setBackground(new java.awt.Color(242, 135, 117));
        sidePanel.setMinimumSize(new java.awt.Dimension(400, 500));
        sidePanel.setPreferredSize(new java.awt.Dimension(400, 500));

        labelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/pedazo de logo white.png"))); // NOI18N

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelLogo)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(labelLogo)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        panelPrincipal.add(sidePanel);
        sidePanel.setBounds(0, 0, 400, 500);

        formsPanel.setBackground(new java.awt.Color(247, 194, 137));
        formsPanel.setPreferredSize(new java.awt.Dimension(400, 500));

        labelLogin.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 12)); // NOI18N
        labelLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/login.png"))); // NOI18N

        labelUsuario.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        labelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuario.setText("Usuario");

        txtUsuario.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        txtUsuario.setBorder(null);
        txtUsuario.setNextFocusableComponent(txtPassword);
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyReleased(evt);
            }
        });

        labelPassword.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        labelPassword.setForeground(new java.awt.Color(255, 255, 255));
        labelPassword.setText("Contrase√±a");

        txtPassword.setNextFocusableComponent(btnLogin);
        txtPassword.setPreferredSize(new java.awt.Dimension(64, 20));
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(234, 228, 143));
        btnLogin.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(242, 135, 117));
        btnLogin.setText("Ingresar");
        btnLogin.setBorder(null);
        btnLogin.setNextFocusableComponent(txtUsuario);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        btnLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnLoginKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout formsPanelLayout = new javax.swing.GroupLayout(formsPanel);
        formsPanel.setLayout(formsPanelLayout);
        formsPanelLayout.setHorizontalGroup(
            formsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formsPanelLayout.createSequentialGroup()
                .addGroup(formsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(formsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formsPanelLayout.createSequentialGroup()
                            .addGap(104, 104, 104)
                            .addComponent(labelLogin))
                        .addGroup(formsPanelLayout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addGroup(formsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelUsuario)
                                    .addComponent(labelPassword))
                                .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        formsPanelLayout.setVerticalGroup(
            formsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formsPanelLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(labelLogin)
                .addGap(18, 18, 18)
                .addComponent(labelUsuario)
                .addGap(18, 18, 18)
                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelPassword)
                .addGap(18, 18, 18)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        panelPrincipal.add(formsPanel);
        formsPanel.setBounds(400, 0, 400, 500);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        doLogin();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtPassword.requestFocus();
        }
    }//GEN-LAST:event_txtUsuarioKeyReleased

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnLogin.requestFocus();
        }
    }//GEN-LAST:event_txtPasswordKeyReleased

    private void btnLoginKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLoginKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            doLogin();
        }
    }//GEN-LAST:event_btnLoginKeyReleased

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JPanel formsPanel;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelLogo;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private void Login(String usuario, char[] password) {
        // instancia la conexi√≥n a la base de datos
        Connection cn = DBConnection.conectarDB();
        // si no se puede conectar notifica al usuario
        if(cn == null){
            JOptionPane.showMessageDialog(this,"No hay conexi√≥n a la BD");
        }else{
            try{
                // encripta el password
                String passwordHash = hashPassword(password);
                // sentencia sql para buscar el usuario
                String sql = "SELECT * FROM usuarios u WHERE u.usuario = ? and u.password = ?";
                // prepara la sentencia sql para dar mayor seguridad a la aplicaci√≥n
                PreparedStatement st = (PreparedStatement) cn.prepareStatement(sql);
                
                // enlaza las variables con la sentencia sql
                st.setString(1, usuario);
                st.setString(2, passwordHash);

                // ejecuta la consulta y guarda el resultado en una variable tipo result set
                ResultSet rs = st.executeQuery();
                // si el result set tiene registros (nos logueamos correctamente)
                if(rs.next()){
                    // instancia el formualrio del menu
                    MenuForm menuForm = new MenuForm();
                    // muestra el formualrio del menu
                    menuForm.setVisible(true);
                    // cierra formulario login
                    dispose();
                }else{
                    JOptionPane.showMessageDialog(this,"Credenciales no encontradas");
                }
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }   
    }

    private String hashPassword(char[] password) {
        try{
            // instacia la variable md con el algoritmo de encriptaci√≥n md5
            MessageDigest md = MessageDigest.getInstance("MD5");
            // actualiza la variable md con el valor en bytes de password
            md.update(new String(password).getBytes(StandardCharsets.UTF_8));
            // asigna a una array de bytes la contrase√±a encriptada
            byte[] digest = md.digest();
            // devuelve la contrase√±a encriptada en String con may√∫sculas
            return DatatypeConverter.printHexBinary(digest).toUpperCase();
        }catch(NoSuchAlgorithmException ex){
            JOptionPane.showMessageDialog(this,ex.getMessage());
            return null;
        }
    }

    private void doLogin() {
        // asigna los valores de los campos a las variables correspondientes
        String usuario = txtUsuario.getText();
        char[] password = txtPassword.getPassword();
        // valida que el campo usuario y la contrase√±a est√©n cargado
        if(usuario.isEmpty()){
            JOptionPane.showMessageDialog(this,"Debe completar el nombre de usuario");
        }else if(password.length == 0){
            JOptionPane.showMessageDialog(this,"Debe completar el password");
        }else{
            // realiza el login del usuario
            Login(usuario, password);
        }
    }
}
