/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ticketdemil.Formularios;

import global.ControladorMenu;
import global.DBConnection;
import global.OperacionesRegistros;
import global.PaletaColores;
import java.awt.CardLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import models.Usuarios;

/**
 *
 * @author antit
 */
public class TicketEditarForm extends javax.swing.JPanel {
    JPanel cardsPanel;

    /**
     * Creates new form FrmEditarTicket
     */
    public TicketEditarForm() {
        initComponents();
        List<String> usuario = Usuarios.getUsuario();
        if(usuario.get(6).equals("C")){
            btnGuardar.setEnabled(false);
            txtDescripcion.setEnabled(false);
            spPrioridad.setEnabled(false);
            txtNombreProducto.setEnabled(false);
            chkHabilitar.setEnabled(false);
        }else if(usuario.get(6).equals("E")){
            txtDescripcion.setEnabled(false);
            spPrioridad.setEnabled(false);
            txtNombreProducto.setEnabled(false);
        }
        this.setBackground(PaletaColores.peach);
        lblTituloForm.setForeground(Color.red);
        lblNombre.setForeground(PaletaColores.linen);
        lblDescripcion.setForeground(PaletaColores.linen);
        lblPrioridad.setForeground(PaletaColores.linen);
        lblDias.setForeground(PaletaColores.linen);
        lblEstado.setForeground(PaletaColores.linen);
        chkHabilitar.setForeground(PaletaColores.linen);
        chkHabilitar.setBackground(PaletaColores.peach);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Estados = new javax.swing.ButtonGroup();
        lblTituloForm = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        slDiasEstimados = new javax.swing.JSlider();
        lblDias = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        chkHabilitar = new javax.swing.JCheckBox();
        rbPendiente = new javax.swing.JRadioButton();
        rbAbierto = new javax.swing.JRadioButton();
        rbCerrado = new javax.swing.JRadioButton();
        lblEstado = new javax.swing.JLabel();
        lblPrioridad = new javax.swing.JLabel();
        spPrioridad = new javax.swing.JSpinner();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lblTituloForm.setFont(new java.awt.Font("Nirmala UI", 1, 24)); // NOI18N
        lblTituloForm.setText("Editar Ticket");

        btnGuardar.setBackground(new java.awt.Color(153, 204, 0));
        btnGuardar.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(null);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        btnGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnGuardarKeyReleased(evt);
            }
        });

        btnCancelar.setBackground(java.awt.Color.red);
        btnCancelar.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(null);

        lblNombre.setText("Nombre del Producto:");

        lblDescripcion.setText("Descripción: ");

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        slDiasEstimados.setMajorTickSpacing(1);
        slDiasEstimados.setMaximum(5);
        slDiasEstimados.setMinimum(1);
        slDiasEstimados.setPaintLabels(true);
        slDiasEstimados.setPaintTicks(true);
        slDiasEstimados.setValue(1);
        slDiasEstimados.setEnabled(false);

        lblDias.setText("Días Estimados");

        chkHabilitar.setText("Habilitar Campos");
        chkHabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHabilitarActionPerformed(evt);
            }
        });

        Estados.add(rbPendiente);
        rbPendiente.setText("Pendiente");
        rbPendiente.setEnabled(false);

        Estados.add(rbAbierto);
        rbAbierto.setText("Abierto");
        rbAbierto.setEnabled(false);

        Estados.add(rbCerrado);
        rbCerrado.setText("Cerrado");
        rbCerrado.setEnabled(false);

        lblEstado.setText("Estado");

        lblPrioridad.setText("Prioridad");

        spPrioridad.setModel(new javax.swing.SpinnerListModel(new String[] {"Baja", "Media", "Alta"}));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lblTituloForm))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblDescripcion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblNombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbPendiente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbAbierto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbCerrado))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(slDiasEstimados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblEstado)
                                            .addComponent(lblDias)
                                            .addComponent(chkHabilitar))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPrioridad)
                                            .addComponent(spPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(220, 220, 220))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloForm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre)
                            .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDescripcion)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkHabilitar)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDias)
                                .addGap(4, 4, 4)
                                .addComponent(slDiasEstimados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblEstado)))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbPendiente)
                    .addComponent(rbCerrado)
                    .addComponent(rbAbierto))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
            guardarRegistro();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGuardarKeyReleased
        // TODO add your handling code here
            guardarRegistro();
    }//GEN-LAST:event_btnGuardarKeyReleased

    private void chkHabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHabilitarActionPerformed
        // TODO add your handling code here:
        slDiasEstimados.setEnabled(true);
        rbPendiente.setEnabled(true);
        rbAbierto.setEnabled(true);
        rbCerrado.setEnabled(true);
    }//GEN-LAST:event_chkHabilitarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {                                    
        cargarRegistro();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Estados;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox chkHabilitar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblDias;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrioridad;
    private javax.swing.JLabel lblTituloForm;
    private javax.swing.JRadioButton rbAbierto;
    private javax.swing.JRadioButton rbCerrado;
    private javax.swing.JRadioButton rbPendiente;
    private javax.swing.JSlider slDiasEstimados;
    private javax.swing.JSpinner spPrioridad;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtNombreProducto;
    // End of variables declaration//GEN-END:variables

    private void guardarRegistro() {
    //crea una lista para los campos a insertar
        List<String> campos = new ArrayList<>();
        String estado = setEstado();
        // asignar campo por campo los valores a la lista
        campos.add(String.valueOf(OperacionesRegistros.idRegistroEditar));
        campos.add(txtDescripcion.getText());
        campos.add(String.valueOf(slDiasEstimados.getValue()));
        campos.add(estado);
        // insertar el registro
        OperacionesRegistros.actualizar(campos, "sp_actualizar_ticket");
        // limpiar campos
        txtNombreProducto.setText("");
        OperacionesRegistros.idRegistroEditar = 0;
        // se instancia los formularios a los que van a llevar los botones Nuevo y Editar
        TicketVerForm ticketVerForm = new TicketVerForm();
        // encuentra el Panel padre
        cardsPanel = (JPanel) btnGuardar.getParent().getParent();
        // define el nombre botón del menú que va a quedar activo, en este caso debe ser btnNuevoProducto
        ControladorMenu.nombreMenuNuevo = "btnVerTicket";
        // cambiar de color el botón activo
        ControladorMenu.cambiarBotonActivo(cardsPanel);
        // trae el layout del pnael padre
        CardLayout cardLayout = (CardLayout) cardsPanel.getLayout();
        // cambia el formulario y pasa un nuevo nombre para poder identificarlo, en este caso nuevoProducto
        ControladorMenu.cambiarFormulario(cardLayout, cardsPanel,ticketVerForm, "verTicket");
    }
    private void cargarRegistro() {
        
        Connection cn = DBConnection.conectarDB();
        if(cn == null){
            JOptionPane.showMessageDialog(
                    this,
                    "No hay conexión a la BD",
                    "Demonios",
                    JOptionPane.ERROR_MESSAGE);
        }else{
            try{
                int id = OperacionesRegistros.idRegistroEditar;
                // sentencia sql para buscar todos los productos
                String sql = "select t.*,p.NOMBRE_PRODUCTO from TICKETS t \n" +
                             "inner join PRODUCTOS p on t.ID_PRODUCTO=p.ID_PRODUCTO\n" +
                             "where t.ID_TICKET = ?";
                
                
                // prepara la sentencia sql para dar mayor seguridad a la aplicación
                PreparedStatement st = (PreparedStatement) cn.prepareStatement(sql);
                st.setInt(1, id);

                // ejecuta la consulta y guarda el resultado en una variable tipo result set
                ResultSet rs = st.executeQuery();
                // recorrer el result set con un while
                String estado;
                if(rs.next()){
                    // asignamos los valores al campo correspondiente
                    txtNombreProducto.setText(rs.getString("nombre_producto"));
                    txtDescripcion.setText(rs.getString("descripcion"));
                    estado= rs.getString("estado");
                    setEstadoButton(estado);
                    slDiasEstimados.setValue(rs.getInt("dias_estimado"));
                }else{
                    JOptionPane.showMessageDialog(
                        this,
                        "Registro no encontrado",
                        "Demonios",
                        JOptionPane.ERROR_MESSAGE);
                }
            }catch(SQLException ex){
                JOptionPane.showMessageDialog(
                        this,
                        ex.getMessage(),
                        "Demonios",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void setEstadoButton(String estado) {
        switch (estado) {
            case "C" -> rbCerrado.setSelected(true);
            case "A" -> rbAbierto.setSelected(true);
            default -> rbPendiente.setSelected(true);
        }
    }

    private String setEstado() {
        if(rbCerrado.isSelected()){
            return "C";
        }
        
        if(rbAbierto.isSelected()){
            return "A";
        }
        
        return "P";
    }
}
